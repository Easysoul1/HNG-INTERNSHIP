const express = require("express");
const cors = require("cors");
const axios = require("axios");

const app = express();
app.use(cors());
app.use(express.json()); // Middleware to handle JSON requests

// Function to check if a number is prime
function isPrime(num) {
    if (num < 2) return false;
    for (let i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) return false;
    }
    return true;
}

// Function to check if a number is a perfect number
function isPerfect(num) {
    let sum = 0;
    for (let i = 1; i < num; i++) {
        if (num % i === 0) sum += i;
    }
    return sum === num;
}

// Function to check if a number is an Armstrong number
function isArmstrong(num) {
    const digits = num.toString().split("").map(Number);
    const power = digits.length;
    const sum = digits.reduce((acc, digit) => acc + Math.pow(digit, power), 0);
    return sum === num;
}

// Function to get the sum of digits
function getDigitSum(num) {
    return num.toString().split("").reduce((acc, digit) => acc + parseInt(digit), 0);
}

// Fetch fun fact from Numbers API
async function getFunFact(num) {
    try {
        const response = await axios.get(`http://numbersapi.com/${num}/math?json`);
        return response.data.text;
    } catch (error) {
        console.error("Error fetching fun fact:", error.message);
        return "No fun fact available for this number.";
    }
}

// Default Root Route to avoid "Cannot GET /" error
app.get("/", (req, res) => {
    res.send("Welcome to the Number Classification API! Use /api/classify-number?number=your_number to classify a number.");
});

// API Endpoint
app.get("/api/classify-number", async (req, res) => {
    const { number } = req.query;

    // Validate input
    if (!number || isNaN(number) || !Number.isInteger(parseFloat(number))) {
        return res.status(400).json({
            error: true,
            message: "Invalid number provided. Please enter an integer."
        });
    }

    const num = parseInt(number);
    
    // Determine number properties
    const prime = isPrime(num);
    const perfect = isPerfect(num);
    const armstrong = isArmstrong(num);
    const digitSum = getDigitSum(num);
    const parity = num % 2 === 0 ? "even" : "odd";

    // Classify properties
    let properties = [];
    if (prime) properties.push("prime");
    if (perfect) properties.push("perfect");
    if (armstrong) properties.push("armstrong");
    properties.push(parity);

    // Fetch fun fact
    const funFact = await getFunFact(num);

    // Response JSON
    res.json({
        number: num,
        is_prime: prime,
        is_perfect: perfect,
        is_armstrong: armstrong,
        digit_sum: digitSum,
        properties: properties,
        fun_fact: funFact
    });
});

// Define Port
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`âœ… Server is running on port ${PORT}`);
});
